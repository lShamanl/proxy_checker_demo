{% extends '@SyliusUi/Menu/sidebar.html.twig' %}

{% block item %}
    {# override Sylius block in order to bring back rendering of all item html attributes #}
    {% import 'knp_menu.html.twig' as knp_menu %}

    {# building the class of the item #}
    {%- set classes = (item.attribute('class') is not empty ? [item.attribute('class')] : [])|merge(['item']) %}

    {%- if matcher.isCurrent(item) %}
        {%- set classes = classes|merge([options.currentClass]) %}
    {%- elseif matcher.isAncestor(item, options.matchingDepth) %}
        {%- set classes = classes|merge([options.ancestorClass]) %}
    {%- endif %}

    {%- if item.actsLikeFirst %}
        {%- set classes = classes|merge([options.firstClass]) %}
    {%- endif %}

    {%- if item.actsLikeLast %}
        {%- set classes = classes|merge([options.lastClass]) %}
    {%- endif %}

    {# Mark item as "leaf" (no children) or as "branch" (has children that are displayed) #}
    {% if item.hasChildren and options.depth is not same as(0) %}
        {% if options.branch_class is not empty and item.displayChildren %}
            {%- set classes = classes|merge([options.branch_class]) %}
        {% endif %}
    {% elseif options.leaf_class is not empty %}
        {%- set classes = classes|merge([options.leaf_class]) %}
    {%- endif %}

    {%- set attributes = item.attributes %}

    {%- if classes is not empty %}
        {%- set attributes = attributes|merge({'class': classes|join(' ')}) %}
    {%- endif %}

    {% if item.children|length > 0 %}
        <div class="{% if attributes.class is defined %}{{ attributes.class }}{% endif %}">
            <div class="header">{{ item.label|trans }}</div>
            <div class="menu">
                {{ block('list') }}
            </div>
        </div>
    {% else %}
        <a {{ knp_menu.attributes(attributes) }} href="{{ item.uri }}">
            {{ block('icon') }}
            {{ item.label|trans }}
        </a>
    {% endif %}
{% endblock %}
